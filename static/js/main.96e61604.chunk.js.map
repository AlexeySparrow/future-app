{"version":3,"sources":["components/DownloadRing/DownloadRing.module.scss","components/Table/Pagination/Numbers/Numbers.module.scss","components/Table/AddUser/AddUserButton/AddUserButton.module.scss","app.module.scss","components/Table/Table.module.scss","components/Table/Contacts/ContactsTable.module.scss","components/Table/UpPanel/UpPanel.module.scss","components/Table/UpPanel/Search/Search.module.scss","components/Table/UpPanel/ButtonAddUser/ButtonAddUser.module.scss","components/Table/UpPanel/ButtonSearch/ButtonSearch.module.scss","components/Table/Pagination/Pagination.module.scss","components/Table/Pagination/ButtonNext/ButtonNext.module.scss","components/Table/Pagination/ButtonPrev/ButtonPrev.module.scss","components/Table/Title/TitleTable.module.scss","components/Table/UserList/UserList.module.scss","components/Table/AddUser/AddUser.module.scss","components/Table/AddUser/WriteText/WriteText.module.scss","components/SelectData/SelectData.module.scss","components/SelectData/SelectDataBtn/SelectDataBtn.module.scss","components/Table/Contacts/ContactsTable.jsx","redux/tableReducer.js","components/DownloadRing/DownloadRing.jsx","components/Table/Contacts/ContactsTableContainer.jsx","components/Table/UpPanel/Search/Search.jsx","components/Table/UpPanel/Search/SearchContainer.jsx","assets/img/plus.svg","components/Table/UpPanel/ButtonAddUser/ButtonAddUser.jsx","components/Table/UpPanel/ButtonAddUser/ButtonAddUserContainer.jsx","assets/img/search.svg","components/Table/UpPanel/ButtonSearch/ButtonSearch.jsx","components/Table/UpPanel/ButtonSearch/ButtonSearchContainer.jsx","components/Table/UpPanel/UpPanel.jsx","assets/img/arrow.svg","components/Table/Pagination/ButtonNext/ButtonNext.jsx","components/Table/Pagination/ButtonNext/ButtonNextContainer.jsx","components/Table/Pagination/ButtonPrev/ButtonPrev.jsx","components/Table/Pagination/ButtonPrev/ButtonPrevContainer.jsx","components/Table/Pagination/Numbers/Numbers.jsx","components/Table/Pagination/Numbers/NumbersContainer.jsx","components/Table/Pagination/Pagination.jsx","components/Table/Title/Arrow/Arrow.jsx","components/Table/Title/Arrow/ArrowContainer.jsx","components/Table/Title/TitleTable.jsx","components/Table/Title/TitleTableContainer.jsx","components/Table/UserList/UserList.jsx","components/Table/UserList/UserListContainer.jsx","components/Table/AddUser/WriteText/WriteText.jsx","components/Table/AddUser/WriteText/WriteTextContainer.jsx","components/Table/AddUser/AddUserButton/AddUserButton.jsx","components/Table/AddUser/AddUserButton/AddUserButtonContainer.jsx","components/Table/AddUser/AddUser.jsx","components/Table/AddUser/AddUserContainer.jsx","components/Table/Table.jsx","components/SelectData/SelectDataBtn/SelectDataBtn.jsx","components/SelectData/SelectDataBtn/SelectDataBtnContainer.jsx","components/SelectData/SelectData.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js"],"names":["module","exports","ContactsTable","props","detailUser","setDetailUser","row","setRowUser","currentBlockRows","map","user","index","className","style","contactsTable","onClick","id","firstName","lastName","email","phone","UPDATE_REQUEST_SEARCH","ON_SEARCH","UPDATE_TEXT_PAGE_ADD_USER_ID","UPDATE_TEXT_PAGE_ADD_USER_FIRST_NAME","UPDATE_TEXT_PAGE_ADD_USER_LAST_NAME","UPDATE_TEXT_PAGE_ADD_USER_EMAIL","UPDATE_TEXT_PAGE_ADD_USER_PHONE","SEND_NEW_USER_IN_TABLE","TOGGLE_IS_FETCHING","SET_USERS","DIRECTION_SORT","DIRECTION_SORT_FIELD_ARROW","DETAILS_USER_INFO","ROW_USER_INFO","OPEN_ADD_USER_PANEL","BIG_SERVER_DATA","SMALL_SERVER_DATA","CURRENT_BUTTON","CURRENT_BLOCK_ROWS","initialState","users","titleTable","type","name","newRequestSearch","onSearch","newTextPageAddUserId","newTextPageAddUserFirstName","newTextPageAddUserLastName","newTextPageAddUserEmail","newTextPageAddUserPhone","isFetching","directionSort","fieldArrow","rowUser","openPanelAddUser","bigServerData","smallServerData","currentButton","maxUsersOnPage","dotsRight","dotsLeft","setUsers","setCurrentButton","tableReducer","state","action","newUser","DownloadRing","container","roller","ContactsTableDataServer","this","toggleIsFetching","dataLoading","data","axios","then","response","React","Component","ContactsTableContainer","connect","tablePage","Search","search","value","onChange","event","updateTextRequestSearch","target","placeholder","SearchContainer","ButtonAddUser","button","setOpenPanelAddUser","src","buttonAdd","alt","ButtonAddUserContainer","ButtonSearch","updateOnSearch","buttonSearch","ButtonSearchContainer","UpPanel","upPanel","ButtonNext","arrayNumbers","length","arrow","ButtonNextContainer","ButtonPrev","ButtonPrevContainer","Numbers","filter","filteredData","amountPage","Math","ceil","i","push","boxNumbers","sliced","slice","sliced1","sliced2","numbers","page","numberAction","undefined","NumbersLogic","element","toLowerCase","includes","lastBlockRow","firstBlockRow","setCurrentBlockRows","NumbersContainer","Pagination","pagination","Arrow","ArrowContainer","TitleTable","title","fieldSortArrow","TitleTableLogic","sortData","field","sortUsers","copyUsers","concat","sort","a","b","reverse","setDirectionSort","setFieldArrow","TitleTableContainer","UserList","addressCity","address","city","addressStreet","streetAddress","addressState","addressIndex","zip","userList","description","UserListContainer","WriteText","writeText","e","body","updateTextPageAddUserId","updateTextPageAddUserFirstName","updateTextPageAddUserLastName","updateTextPageAddUserEmail","updateTextPageAddUserPhone","WriteTextContainer","AddUserButton","addBtn","setSendNewUser","addBtnClose","AddUserButtonContainer","AddUser","addUser","AddUserContainer","Table","table","SelectDataBtn","selectBtn","to","setSmallServerData","setBigServerData","SelectDataBtnContainer","SelectData","selectData","App","wrapper","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.96e61604.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DownloadRing_container__1O2f0\",\"roller\":\"DownloadRing_roller__3louN\",\"lds-roller\":\"DownloadRing_lds-roller__1bRPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numbers\":\"Numbers_numbers__27sb4\",\"numberAction\":\"Numbers_numberAction__hNCkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"AddUserButton_addBtn__3S4_l\",\"addBtnClose\":\"AddUserButton_addBtnClose__30jPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__TH-D8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__258F_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTable\":\"ContactsTable_contactsTable__18zPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upPanel\":\"UpPanel_upPanel__1NpfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3BPc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonAddUser_button__HL0Br\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonSearch_button__1BheG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__wqHgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonNext_button__1YuvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonPrev_button__XuP1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleTable\":\"TitleTable_titleTable__2uyqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userList\":\"UserList_userList__26iHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addUser\":\"AddUser_addUser__3Sf70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writeText\":\"WriteText_writeText__38lwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectData\":\"SelectData_selectData__1hI3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectBtn\":\"SelectDataBtn_selectBtn__1g82W\"};","import style from \"./ContactsTable.module.scss\";\r\n\r\nconst ContactsTable = (props) => {\r\n\r\n    let detailUser = props.setDetailUser;\r\n    detailUser = (row) => {\r\n        props.setRowUser(row)\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n        {\r\n            props.currentBlockRows.map((user, index) =>\r\n                <tr className={style.contactsTable} onClick={() => {\r\n                    detailUser(user)\r\n                }} key={index}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.firstName}</td>\r\n                    <td>{user.lastName}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.phone}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default ContactsTable;","/* input search in up panel */\r\nconst UPDATE_REQUEST_SEARCH = 'UPDATE_REQUEST_SEARCH';\r\nconst ON_SEARCH = 'ON_SEARCH';\r\n/*--------------------------*/\r\n/* work on adding a new user */\r\nconst UPDATE_TEXT_PAGE_ADD_USER_ID = 'UPDATE_TEXT_PAGE_ADD_USER_ID';\r\nconst UPDATE_TEXT_PAGE_ADD_USER_FIRST_NAME = 'UPDATE_TEXT_PAGE_ADD_USER_FIRST_NAME';\r\nconst UPDATE_TEXT_PAGE_ADD_USER_LAST_NAME = 'UPDATE_TEXT_PAGE_ADD_USER_LAST_NAME';\r\nconst UPDATE_TEXT_PAGE_ADD_USER_EMAIL = 'UPDATE_TEXT_PAGE_ADD_USER_EMAIL';\r\nconst UPDATE_TEXT_PAGE_ADD_USER_PHONE = 'UPDATE_TEXT_PAGE_ADD_USER_PHONE';\r\nconst SEND_NEW_USER_IN_TABLE = 'SEND_NEW_USER_IN_TABLE';\r\n/*---------------------------*/\r\n/* preloader */\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n/*-----------*/\r\n/* copy state users */\r\nconst SET_USERS = 'SET_USERS';\r\n/* ---------------- */\r\n/* sort more/less in table users */\r\nconst DIRECTION_SORT = 'DIRECTION_SORT';\r\nconst DIRECTION_SORT_FIELD_ARROW = 'DIRECTION_SORT_FIELD_ARROW';\r\n/* ----------------------------- */\r\n/* bottom window all info about user */\r\nconst DETAILS_USER_INFO = 'DETAILS_USER_INFO';\r\nconst ROW_USER_INFO = 'ROW_USER_INFO';\r\n/* --------------------------------- */\r\n/* open add user panel */\r\nconst OPEN_ADD_USER_PANEL = 'OPEN_ADD_USER_PANEL';\r\n/* ------------------- */\r\n/* toggle server data - big/small */\r\nconst BIG_SERVER_DATA = 'BIG_SERVER_DATA';\r\nconst SMALL_SERVER_DATA = 'SMALL_SERVER_DATA';\r\n/* ------------------------------ */\r\n/* pagination */\r\nconst CURRENT_BUTTON = 'CURRENT_BUTTON';\r\nconst CURRENT_BLOCK_ROWS = 'CURRENT_BLOCK_ROWS';\r\n/* ---------- */\r\n\r\nlet initialState = {\r\n    users: [], //Array users\r\n    titleTable: [\r\n        {type: 'id',name: 'Id'},\r\n        {type: 'firstName',name: 'First Name'},\r\n        {type: 'lastName',name: 'Last Name'},\r\n        {type: 'email',name: 'Email'},\r\n        {type: 'phone',name: 'Phone'}\r\n    ],\r\n\r\n    newRequestSearch: '', //input search in table page to display letters\r\n    onSearch: '', //string search\r\n\r\n    newTextPageAddUserId: '', //input id in add user page to display letters\r\n    newTextPageAddUserFirstName: '', //input First Name in add user page to display letters\r\n    newTextPageAddUserLastName: '', //input Last Name in add user page to display letters\r\n    newTextPageAddUserEmail: '', //input Email in add user page to display letters\r\n    newTextPageAddUserPhone: '', //input Phone in add user page to display letters\r\n\r\n    isFetching: false, //preloader\r\n\r\n    directionSort: true, // direction sort table users\r\n    fieldArrow: '', // direction sort field arrow\r\n\r\n    detailUser: '', // detail user info from user page\r\n    rowUser: '', // row user info from user page\r\n\r\n    openPanelAddUser: false, //click btn for open add user panel\r\n\r\n    bigServerData: false, //if true => download dig server data\r\n    smallServerData: false, //if true => download small server data\r\n\r\n    currentButton: 1, //active button number in pagination\r\n    maxUsersOnPage: 17, //amount users on page pagination\r\n    currentBlockRows: [], //array separated users on blocks\r\n    dotsRight: '...', // dots in pagination\r\n    dotsLeft: '...', // dots in pagination\r\n}\r\n\r\nconst tableReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        /* input search in up panel */\r\n        case UPDATE_REQUEST_SEARCH:\r\n            return {\r\n                ...state,\r\n                newRequestSearch: action.newRequestSearch\r\n            }\r\n        case ON_SEARCH:\r\n            return {\r\n                ...state,\r\n                onSearch: action.onSearch\r\n            }\r\n        /*--------------------------*/\r\n        /* work on adding a new user */\r\n        case UPDATE_TEXT_PAGE_ADD_USER_ID:\r\n            return {\r\n                ...state,\r\n                newTextPageAddUserId: action.newUser\r\n            }\r\n        case UPDATE_TEXT_PAGE_ADD_USER_FIRST_NAME:\r\n            return {\r\n                ...state,\r\n                newTextPageAddUserFirstName: action.newUser\r\n            }\r\n        case UPDATE_TEXT_PAGE_ADD_USER_LAST_NAME:\r\n            return {\r\n                ...state,\r\n                newTextPageAddUserLastName: action.newUser\r\n            }\r\n        case UPDATE_TEXT_PAGE_ADD_USER_EMAIL:\r\n            return {\r\n                ...state,\r\n                newTextPageAddUserEmail: action.newUser\r\n            }\r\n        case UPDATE_TEXT_PAGE_ADD_USER_PHONE:\r\n            return {\r\n                ...state,\r\n                newTextPageAddUserPhone: action.newUser\r\n            }\r\n        case SEND_NEW_USER_IN_TABLE: {\r\n            let newUser = {\r\n                id: state.newTextPageAddUserId,\r\n                firstName: state.newTextPageAddUserFirstName,\r\n                lastName: state.newTextPageAddUserLastName,\r\n                email: state.newTextPageAddUserEmail,\r\n                phone: state.newTextPageAddUserPhone,\r\n            }\r\n            return {\r\n                ...state,\r\n                newTextPageAddUserId: '',\r\n                newTextPageAddUserFirstName: '',\r\n                newTextPageAddUserLastName: '',\r\n                newTextPageAddUserEmail: '',\r\n                newTextPageAddUserPhone: '',\r\n                users: [newUser, ...state.users]\r\n            }\r\n        }\r\n        /*----------------------------*/\r\n        /* copy state users */\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        /*-------------------*/\r\n        /* preloader */\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        /* ---------- */\r\n        /* sort more/less in table users */\r\n        case DIRECTION_SORT:\r\n            return {\r\n                ...state,\r\n                directionSort: action.directionSort\r\n            }\r\n        case DIRECTION_SORT_FIELD_ARROW:\r\n            return {\r\n                ...state,\r\n                fieldArrow: action.fieldArrow\r\n            }\r\n        /* ----------------------------- */\r\n        /* bottom window all info about user */\r\n        case DETAILS_USER_INFO:\r\n            return {\r\n                ...state,\r\n                detailUser: action.detailUser\r\n            }\r\n        case ROW_USER_INFO:\r\n            return {\r\n                ...state,\r\n                rowUser: action.rowUser\r\n            }\r\n        /* --------------------------------- */\r\n        /* open add user panel */\r\n        case OPEN_ADD_USER_PANEL:\r\n            return {\r\n                ...state,\r\n                openPanelAddUser: action.openPanelAddUser\r\n            }\r\n        /* ----------------- */\r\n        /* toggle server data - big/small */\r\n        case BIG_SERVER_DATA:\r\n            return {\r\n                ...state,\r\n                bigServerData: action.bigServerData\r\n            }\r\n        case SMALL_SERVER_DATA:\r\n            return {\r\n                ...state,\r\n                smallServerData: action.smallServerData\r\n            }\r\n        /* ------------------------------ */\r\n        /* pagination */\r\n        case CURRENT_BUTTON:\r\n            return {\r\n                ...state,\r\n                currentButton: action.currentButton\r\n            }\r\n        case CURRENT_BLOCK_ROWS:\r\n            return {\r\n                ...state,\r\n                currentBlockRows: action.currentBlockRows\r\n            }\r\n        /* ---------- */\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/* input search in up panel */\r\nexport const updateTextRequestSearch = (newRequestSearch) => ({type: UPDATE_REQUEST_SEARCH, newRequestSearch});\r\nexport const updateOnSearch = (onSearch) => ({type: ON_SEARCH, onSearch})\r\n/*--------------------------*/\r\n/* work on adding a new user */\r\nexport const updateTextPageAddUserId = (newUser) => ({type: UPDATE_TEXT_PAGE_ADD_USER_ID, newUser});\r\nexport const updateTextPageAddUserFirstName = (newUser) => ({type: UPDATE_TEXT_PAGE_ADD_USER_FIRST_NAME, newUser});\r\nexport const updateTextPageAddUserLastName = (newUser) => ({type: UPDATE_TEXT_PAGE_ADD_USER_LAST_NAME, newUser});\r\nexport const updateTextPageAddUserEmail = (newUser) => ({type: UPDATE_TEXT_PAGE_ADD_USER_EMAIL, newUser});\r\nexport const updateTextPageAddUserPhone = (newUser) => ({type: UPDATE_TEXT_PAGE_ADD_USER_PHONE, newUser});\r\nexport const setSendNewUser = () => ({type: SEND_NEW_USER_IN_TABLE});\r\n/*---------------------------*/\r\n/* preloader */\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n/*-----------*/\r\n/* copy state users */\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\n/* ---------------- */\r\n/* sort more/less in table users */\r\nexport const setDirectionSort = (directionSort) => ({type: DIRECTION_SORT, directionSort});\r\nexport const setFieldArrow = (fieldArrow) => ({type: DIRECTION_SORT_FIELD_ARROW, fieldArrow});\r\n/* ----------------------------- */\r\n/* bottom window all info about user */\r\nexport const setDetailUser = (detailUser) => ({type: DETAILS_USER_INFO, detailUser});\r\nexport const setRowUser = (rowUser) => ({type: ROW_USER_INFO, rowUser});\r\n/* --------------------------------- */\r\n/* open add user panel */\r\nexport const setOpenPanelAddUser = (openPanelAddUser) => ({type: OPEN_ADD_USER_PANEL, openPanelAddUser});\r\n/* ------------------- */\r\n/* toggle server data - big/small */\r\nexport const setBigServerData = (bigServerData) => ({type: BIG_SERVER_DATA, bigServerData});\r\nexport const setSmallServerData = (smallServerData) => ({type: SMALL_SERVER_DATA, smallServerData});\r\n/* ------------------------------ */\r\n/* pagination */\r\nexport const setCurrentButton = (currentButton) => ({type: CURRENT_BUTTON, currentButton});\r\nexport const setCurrentBlockRows = (currentBlockRows) => ({type: CURRENT_BLOCK_ROWS, currentBlockRows});\r\n/* ---------- */\r\n\r\nexport default tableReducer;","import style from './DownloadRing.module.scss';\r\n\r\nconst DownloadRing = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.roller}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DownloadRing;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ContactsTable from \"./ContactsTable\";\r\nimport {\r\n    setDetailUser,\r\n    setRowUser,\r\n    setUsers,\r\n    toggleIsFetching\r\n} from \"../../../redux/tableReducer\";\r\nimport * as axios from 'axios';\r\nimport DownloadRing from \"../../DownloadRing/DownloadRing\";\r\n\r\nexport class ContactsTableDataServer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const smallData = 'https://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n        const bigData = 'https://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n\r\n        this.props.toggleIsFetching(true);\r\n\r\n        let dataLoading = (data) => {\r\n            axios.get(data)\r\n                .then(response => {\r\n                    this.props.toggleIsFetching(false)\r\n                    this.props.setUsers(response.data)\r\n                });\r\n        }\r\n\r\n        if (this.props.bigServerData) {\r\n            dataLoading(bigData)\r\n        } else if (this.props.smallServerData) {\r\n            dataLoading(smallData)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <DownloadRing/>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n                : null}\r\n            <ContactsTable {...this.props}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        tablePage: state.tablePage,\r\n        isFetching: state.tablePage.isFetching,\r\n        bigServerData: state.tablePage.bigServerData,\r\n        smallServerData: state.tablePage.smallServerData,\r\n        currentBlockRows: state.tablePage.currentBlockRows\r\n    }\r\n}\r\n\r\nconst ContactsTableContainer = connect(mapStateToProps, {\r\n    setUsers,\r\n    toggleIsFetching,\r\n    setDetailUser,\r\n    setRowUser,\r\n})(ContactsTableDataServer);\r\n\r\nexport default ContactsTableContainer;","import style from \"./Search.module.scss\";\r\n\r\nconst Search = (props) => {\r\n\r\n    return (\r\n        <div className={style.search}>\r\n            <input\r\n                value={props.newRequestSearch}\r\n                onChange={(event) => props.updateTextRequestSearch(event.target.value)}\r\n                type=\"text\"\r\n                placeholder='search'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import {connect} from \"react-redux\";\r\nimport Search from \"./Search\";\r\nimport {updateTextRequestSearch} from \"../../../../redux/tableReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newRequestSearch: state.tablePage.newRequestSearch,\r\n        users: state.tablePage.users\r\n    }\r\n}\r\n\r\nconst SearchContainer = connect(mapStateToProps, {updateTextRequestSearch})(Search);\r\n\r\nexport default SearchContainer;","export default __webpack_public_path__ + \"static/media/plus.6ae41f57.svg\";","import style from './ButtonAddUser.module.scss';\r\nimport buttonAdd from '../../../../assets/img/plus.svg'\r\n\r\nconst ButtonAddUser = (props) => {\r\n\r\n    let togglePanel = () => {\r\n        props.setOpenPanelAddUser(!props.openPanelAddUser)\r\n    }\r\n\r\n    return (\r\n        <button className={style.button} onClick={() => {\r\n            togglePanel()\r\n        }}>\r\n            <img src={buttonAdd} alt=\"search\"/>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonAddUser;","import {connect} from \"react-redux\";\r\nimport ButtonAddUser from \"./ButtonAddUser\";\r\nimport {setOpenPanelAddUser} from \"../../../../redux/tableReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        openPanelAddUser: state.tablePage.openPanelAddUser\r\n    }\r\n}\r\n\r\nconst ButtonAddUserContainer = connect(mapStateToProps, {setOpenPanelAddUser})(ButtonAddUser);\r\n\r\nexport default ButtonAddUserContainer;","export default __webpack_public_path__ + \"static/media/search.85c7305c.svg\";","import style from \"./ButtonSearch.module.scss\";\r\nimport buttonSearch from \"../../../../assets/img/search.svg\";\r\n\r\nconst ButtonSearch = (props) => {\r\n\r\n    return (\r\n        <button className={style.button} onClick={() => {\r\n            props.updateOnSearch(props.newRequestSearch)\r\n        }}>\r\n            <img src={buttonSearch} alt=\"search\"/>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonSearch;","import {connect} from \"react-redux\";\r\nimport ButtonSearch from \"./ButtonSearch\";\r\nimport {updateOnSearch} from \"../../../../redux/tableReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newRequestSearch: state.tablePage.newRequestSearch\r\n    }\r\n}\r\n\r\nconst ButtonSearchContainer = connect(mapStateToProps, {updateOnSearch})(ButtonSearch);\r\n\r\nexport default ButtonSearchContainer;","import style from \"./UpPanel.module.scss\";\r\nimport SearchContainer from \"./Search/SearchContainer\";\r\nimport ButtonAddUserContainer from \"./ButtonAddUser/ButtonAddUserContainer\";\r\nimport ButtonSearchContainer from \"./ButtonSearch/ButtonSearchContainer\";\r\n\r\nconst UpPanel = () => {\r\n    return (\r\n        <div className={style.upPanel}>\r\n            <ButtonAddUserContainer/>\r\n            <SearchContainer/>\r\n            <ButtonSearchContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpPanel;","export default __webpack_public_path__ + \"static/media/arrow.cab3b3c1.svg\";","import style from \"./ButtonNext.module.scss\";\r\nimport arrow from \"../../../../assets/img/arrow.svg\";\r\n\r\nconst ButtonNext = (props) => {\r\n\r\n    return (\r\n        <button className={style.button}\r\n                onClick={() => props.setCurrentButton(props.currentButton === props.arrayNumbers.length\r\n                    ? props.currentButton\r\n                    : props.currentButton + 1)}>\r\n            <img src={arrow} alt=\"next\"/>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonNext;","import {connect} from \"react-redux\";\r\nimport ButtonNext from \"./ButtonNext\";\r\nimport {setCurrentButton} from \"../../../../redux/tableReducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentButton: state.tablePage.currentButton,\r\n    }\r\n}\r\n\r\nconst ButtonNextContainer = connect(mapStateToProps, {setCurrentButton})(ButtonNext);\r\n\r\nexport default ButtonNextContainer;","import style from \"./ButtonPrev.module.scss\";\r\nimport arrow from \"../../../../assets/img/arrow.svg\";\r\n\r\nconst ButtonPrev = (props) => {\r\n    return (\r\n        <button className={style.button}\r\n                onClick={() => props.setCurrentButton(props.currentButton === 1 ? props.currentButton : props.currentButton - 1)}>\r\n            <img src={arrow} alt=\"prev\"/>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonPrev;","import {connect} from \"react-redux\";\r\nimport ButtonPrev from \"./ButtonPrev\";\r\nimport {setCurrentButton} from \"../../../../redux/tableReducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentButton: state.tablePage.currentButton\r\n    }\r\n}\r\n\r\nconst ButtonPrevContainer = connect(mapStateToProps, {setCurrentButton})(ButtonPrev);\r\n\r\nexport default ButtonPrevContainer;","import style from \"./Numbers.module.scss\";\r\nimport ButtonNextContainer from \"../ButtonNext/ButtonNextContainer\";\r\nimport ButtonPrevContainer from \"../ButtonPrev/ButtonPrevContainer\";\r\nimport React from 'react';\r\n\r\nconst Numbers = (props) => {\r\n\r\n    let filter = props.filteredData();\r\n\r\n    let amountPage = Math.ceil(filter.length / props.maxUsersOnPage);\r\n\r\n    let arrayNumbers = [];\r\n    for (let i = 1; i <= amountPage; i++) {\r\n        arrayNumbers.push(i)\r\n    }\r\n\r\n    let boxNumbers = [...arrayNumbers];\r\n\r\n    if (arrayNumbers.length > 6) {\r\n        if (props.currentButton >= 1 && props.currentButton <= 3) {\r\n            boxNumbers = [1, 2, 3, 4, props.dotsRight, arrayNumbers.length];\r\n        } else if (props.currentButton === 4) {\r\n            const sliced = arrayNumbers.slice(0, 5);\r\n            boxNumbers = [...sliced, props.dotsRight, arrayNumbers.length];\r\n        } else if (props.currentButton > 4 && props.currentButton < arrayNumbers.length - 2) {\r\n            const sliced1 = arrayNumbers.slice(props.currentButton - 2, props.currentButton);\r\n            const sliced2 = arrayNumbers.slice(props.currentButton, props.currentButton + 1);\r\n            boxNumbers = [1, props.dotsLeft, ...sliced1, ...sliced2, props.dotsRight, arrayNumbers.length];\r\n        } else if (props.currentButton > arrayNumbers.length - 3) {\r\n            const sliced = arrayNumbers.slice(arrayNumbers.length - 4);\r\n            boxNumbers = [1, props.dotsLeft, ...sliced];\r\n        } else if (props.currentButton === props.dotsRight || props.currentButton === props.dotsLeft) {\r\n            Math.ceil(props.setCurrentButton(arrayNumbers.length / 2))\r\n        }\r\n    }\r\n\r\n    /* page && style.numberAction*/\r\n    return (\r\n        <>\r\n            <ButtonPrevContainer/>\r\n            <div className={style.numbers}>\r\n                {\r\n                    boxNumbers.map((page, index) =>\r\n                        <span className={page === props.currentButton ? style.numberAction : undefined}\r\n                              key={index}\r\n                              onClick={() => {\r\n                                  props.setCurrentButton(page)\r\n                              }}\r\n                        >{page}</span>\r\n                    )\r\n                }\r\n            </div>\r\n            <ButtonNextContainer arrayNumbers={arrayNumbers}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Numbers;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Numbers from \"./Numbers\";\r\nimport {setCurrentBlockRows, setCurrentButton} from \"../../../../redux/tableReducer\";\r\n\r\nclass NumbersLogic extends React.Component {\r\n\r\n    /* filter */\r\n    filteredData = () => {\r\n        if (!this.props.onSearch) {\r\n            return this.props.users\r\n        }\r\n        return this.props.users.filter(\r\n            element => {\r\n                return element['firstName'].toLowerCase().includes(this.props.onSearch.toLowerCase())\r\n                    || element['lastName'].toLowerCase().includes(this.props.onSearch.toLowerCase())\r\n                    || element['email'].toLowerCase().includes(this.props.onSearch.toLowerCase())\r\n                    || element['phone'].includes(this.props.onSearch)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /* ---------------- */\r\n\r\n    componentDidUpdate() {\r\n        let lastBlockRow = this.props.currentButton * this.props.maxUsersOnPage;\r\n        let firstBlockRow = lastBlockRow - this.props.maxUsersOnPage;\r\n        this.props.setCurrentBlockRows(this.filteredData().slice(firstBlockRow, lastBlockRow));\r\n    }\r\n\r\n    render() {\r\n        return <Numbers\r\n            {...this.props}\r\n            filteredData={this.filteredData}\r\n        />;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentButton: state.tablePage.currentButton,\r\n        arrayNumbers: state.tablePage.arrayNumbers,\r\n        users: state.tablePage.users,\r\n        maxUsersOnPage: state.tablePage.maxUsersOnPage,\r\n        newRequestSearch: state.tablePage.newRequestSearch,\r\n        dotsRight: state.tablePage.dotsRight,\r\n        dotsLeft: state.tablePage.dotsLeft,\r\n        onSearch: state.tablePage.onSearch\r\n    }\r\n}\r\n\r\nconst NumbersContainer = connect(mapStateToProps, {setCurrentButton, setCurrentBlockRows})(NumbersLogic);\r\n\r\nexport default NumbersContainer;","import style from \"./Pagination.module.scss\";\r\nimport NumbersContainer from \"./Numbers/NumbersContainer\";\r\n\r\nconst Pagination = () => {\r\n    return (\r\n        <div className={style.pagination}>\r\n            <NumbersContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","const Arrow = (props) => {\r\n    return (\r\n        props.directionSort ? <span>▲</span> : <span>▼</span>\r\n    )\r\n}\r\n\r\nexport default Arrow;","import Arrow from \"./Arrow\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        directionSort: state.tablePage.directionSort\r\n    }\r\n}\r\n\r\nconst ArrowContainer = connect(mapStateToProps, {})(Arrow);\r\n\r\nexport default ArrowContainer;","import style from \"./TitleTable.module.scss\";\r\nimport ArrowContainer from \"./Arrow/ArrowContainer\";\r\n\r\nconst TitleTable = (props) => {\r\n\r\n    return (\r\n        <thead>\r\n        <tr className={style.titleTable}>\r\n            {\r\n                props.titleTable.map((title, index) =>\r\n                    <th onClick={() => {\r\n                        props.fieldSortArrow(title.type)\r\n                    }} key={index}>\r\n                        {props.fieldArrow === title.type ? <ArrowContainer/> : null}\r\n                        {title.name}\r\n                    </th>\r\n                )\r\n            }\r\n        </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default TitleTable;","import {connect} from \"react-redux\";\r\nimport TitleTable from \"./TitleTable\";\r\nimport {setDirectionSort, setFieldArrow, setUsers} from \"../../../redux/tableReducer\";\r\nimport React from 'react';\r\n\r\nclass TitleTableLogic extends React.Component {\r\n\r\n    sortData = (field) => {\r\n        const copyUsers = this.props.tablePage.users.concat();\r\n        let sortUsers;\r\n\r\n        if (this.props.directionSort) {\r\n            copyUsers.sort(\r\n                (a, b) => {\r\n                    return a[field] > b[field] ? 1 : -1\r\n                });\r\n        }\r\n        sortUsers = copyUsers.reverse(\r\n            (a, b) => {\r\n                return a[field] > b[field] ? 1 : -1\r\n            });\r\n\r\n        this.props.setUsers(sortUsers)\r\n        this.props.setDirectionSort(!this.props.directionSort);\r\n    }\r\n\r\n    fieldSortArrow = (field) => {\r\n        this.sortData(field)\r\n        this.props.setFieldArrow(field)\r\n    }\r\n\r\n    render() {\r\n        return <TitleTable\r\n            {...this.props}\r\n            fieldSortArrow={this.fieldSortArrow}\r\n        />;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        tablePage: state.tablePage,\r\n        directionSort: state.tablePage.directionSort,\r\n        fieldArrow: state.tablePage.fieldArrow,\r\n        titleTable: state.tablePage.titleTable\r\n    }\r\n}\r\n\r\nconst TitleTableContainer = connect(mapStateToProps, {\r\n    setUsers,\r\n    setDirectionSort,\r\n    setFieldArrow\r\n})(TitleTableLogic);\r\n\r\nexport default TitleTableContainer;","import style from './UserList.module.scss';\r\n\r\nconst UserList = (props) => {\r\n\r\n    const addressCity = props.rowUser && props.rowUser.address ? props.rowUser.address.city : null\r\n    const addressStreet = props.rowUser && props.rowUser.address ? props.rowUser.address.streetAddress : null\r\n    const addressState = props.rowUser && props.rowUser.address ? props.rowUser.address.state : null\r\n    const addressIndex = props.rowUser && props.rowUser.address ? props.rowUser.address.zip : null\r\n\r\n\r\n    return (\r\n        <div className={style.userList}>\r\n            <div>User: <span> {props.rowUser.firstName} {props.rowUser.lastName} </span></div>\r\n            <div>Description: <span> {props.rowUser.description} </span></div>\r\n            <div>Address: <span> {addressStreet} </span></div>\r\n            <div>City: <span> {addressCity} </span></div>\r\n            <div>State: <span> {addressState} </span></div>\r\n            <div>Index: <span> {addressIndex} </span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList;","import UserList from \"./UserList\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        rowUser: state.tablePage.rowUser\r\n    }\r\n}\r\n\r\nconst UserListContainer = connect(mapStateToProps, {})(UserList);\r\n\r\nexport default UserListContainer;","import style from './WriteText.module.scss';\r\n\r\nconst WriteText = (props) => {\r\n\r\n    let onNewIdChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateTextPageAddUserId(body);\r\n    }\r\n    let onNewFirstNameChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateTextPageAddUserFirstName(body);\r\n    }\r\n    let onNewLastNameChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateTextPageAddUserLastName(body);\r\n    }\r\n    let onNewEmailChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateTextPageAddUserEmail(body);\r\n    }\r\n    let onNewPhoneChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateTextPageAddUserPhone(body);\r\n    }\r\n\r\n    return (\r\n        <div className={style.writeText}>\r\n            <div>\r\n                <label> Id </label>\r\n                <input type=\"number\"\r\n                       placeholder='write in...'\r\n                       value={props.tablePage.newTextPageAddUserId}\r\n                       onChange={onNewIdChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label> First Name </label>\r\n                <input type=\"text\"\r\n                       placeholder='write in...'\r\n                       value={props.tablePage.newTextPageAddUserFirstName}\r\n                       onChange={onNewFirstNameChange}\r\n                />\r\n\r\n            </div>\r\n            <div>\r\n                <label> Last Name </label>\r\n                <input type=\"text\"\r\n                       placeholder='write in...'\r\n                       value={props.tablePage.newTextPageAddUserLastName}\r\n                       onChange={onNewLastNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label> Email </label>\r\n                <input type=\"email\"\r\n                       placeholder='write in...'\r\n                       value={props.tablePage.newTextPageAddUserEmail}\r\n                       onChange={onNewEmailChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label> Phone </label>\r\n                <input type=\"tel\"\r\n                       placeholder='write in...'\r\n                       value={props.tablePage.newTextPageAddUserPhone}\r\n                       onChange={onNewPhoneChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WriteText;","import WriteText from \"./WriteText\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    updateTextPageAddUserEmail,\r\n    updateTextPageAddUserFirstName,\r\n    updateTextPageAddUserId,\r\n    updateTextPageAddUserLastName,\r\n    updateTextPageAddUserPhone\r\n} from \"../../../../redux/tableReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        tablePage: state.tablePage\r\n    }\r\n}\r\n\r\nconst WriteTextContainer = connect(mapStateToProps, {\r\n    updateTextPageAddUserId,\r\n    updateTextPageAddUserFirstName,\r\n    updateTextPageAddUserLastName,\r\n    updateTextPageAddUserEmail,\r\n    updateTextPageAddUserPhone\r\n})(WriteText);\r\n\r\nexport default WriteTextContainer;","import style from './AddUserButton.module.scss';\r\n\r\nconst AddUserButton = (props) => {\r\n\r\n    let onSendNewUserClick = () => {\r\n        props.setSendNewUser()\r\n    };\r\n\r\n    // eslint-disable-next-line no-sequences\r\n    if (!props.tablePage.newTextPageAddUserId,\r\n        !props.tablePage.newTextPageAddUserFirstName,\r\n        !props.tablePage.newTextPageAddUserLastName,\r\n        !props.tablePage.newTextPageAddUserEmail,\r\n        !props.tablePage.newTextPageAddUserPhone\r\n    ) {\r\n        return <button\r\n            className={style.addBtnClose}\r\n        >Add</button>\r\n    }\r\n    return <button\r\n        className={style.addBtn}\r\n        onClick={onSendNewUserClick}\r\n    >Add</button>\r\n}\r\n\r\nexport default AddUserButton;","import {connect} from \"react-redux\";\r\nimport AddUserButton from \"./AddUserButton\";\r\nimport {setSendNewUser} from \"../../../../redux/tableReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        tablePage:state.tablePage\r\n    }\r\n}\r\n\r\nconst AddUserButtonContainer = connect(mapStateToProps,{setSendNewUser})(AddUserButton);\r\n\r\nexport default AddUserButtonContainer;","import style from './AddUser.module.scss';\r\nimport WriteTextContainer from \"./WriteText/WriteTextContainer\";\r\nimport AddUserButtonContainer from \"./AddUserButton/AddUserButtonContainer\";\r\n\r\nconst AddUser = (props) => {\r\n\r\n    if (props.openPanelAddUser) {\r\n        return (\r\n            <div className={style.addUser}>\r\n                <WriteTextContainer/>\r\n                <AddUserButtonContainer/>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default AddUser;","import AddUser from \"./AddUser\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        openPanelAddUser: state.tablePage.openPanelAddUser\r\n    }\r\n}\r\n\r\nconst AddUserContainer = connect(mapStateToProps, {})(AddUser);\r\n\r\nexport default AddUserContainer;","import style from \"./Table.module.scss\";\r\nimport ContactsTableContainer from \"./Contacts/ContactsTableContainer\";\r\nimport UpPanel from \"./UpPanel/UpPanel\";\r\nimport Pagination from \"./Pagination/Pagination\";\r\nimport TitleTableContainer from \"./Title/TitleTableContainer\";\r\nimport UserListContainer from \"./UserList/UserListContainer\";\r\nimport AddUserContainer from \"./AddUser/AddUserContainer\";\r\n\r\nconst Table = () => {\r\n\r\n    return (\r\n        <>\r\n            <UpPanel/>\r\n            <AddUserContainer/>\r\n            <table className={style.table}>\r\n                <TitleTableContainer/>\r\n                <ContactsTableContainer/>\r\n            </table>\r\n            <Pagination/>\r\n            <UserListContainer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","import style from './SelectDataBtn.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SelectDataBtn = (props) => {\r\n\r\n    let toggleSmallData = () => {\r\n        props.setSmallServerData(!props.smallServerData)\r\n    }\r\n    let toggleBigData = () => {\r\n        props.setBigServerData(!props.bigServerData)\r\n    }\r\n\r\n    return (\r\n        <div className={style.selectBtn}>\r\n            <NavLink\r\n                to='/table'\r\n                onClick={() => {\r\n                    toggleSmallData()\r\n                }}>\r\n                SMALL\r\n            </NavLink>\r\n            <NavLink\r\n                to='/table'\r\n                onClick={() => {\r\n                    toggleBigData()\r\n                }}>\r\n                BIG\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectDataBtn;","import SelectDataBtn from \"./SelectDataBtn\";\r\nimport {setBigServerData, setSmallServerData} from \"../../../redux/tableReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        bigServerData: state.tablePage.bigServerData,\r\n        smallServerData: state.tablePage.smallServerData\r\n    }\r\n}\r\n\r\nconst SelectDataBtnContainer = connect(mapStateToProps, {setBigServerData, setSmallServerData})(SelectDataBtn);\r\n\r\nexport default SelectDataBtnContainer;\r\n","import style from './SelectData.module.scss';\r\nimport SelectDataBtnContainer from \"./SelectDataBtn/SelectDataBtnContainer\";\r\n\r\nconst SelectData = () => {\r\n    return (\r\n        <div className={style.selectData}>\r\n            <h1>select dataset:</h1>\r\n            <SelectDataBtnContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectData;","import style from './app.module.scss';\nimport Table from \"./components/Table/Table\";\nimport SelectData from \"./components/SelectData/SelectData\";\nimport {Route} from 'react-router-dom';\n\nconst App = () => {\n    return (\n        <div className={style.wrapper}>\n            <Route exact path='/' render={() => <SelectData/>}/>\n            <Route path='/table' render={() => <Table/>}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport tableReducer from \"./tableReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    tablePage: tableReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/reduxStore\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}